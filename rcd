#!/usr/bin/env python
"""Open vimdiff with the modified and unmodified versions of a file.

"""

import os
import sys
import subprocess
import tempfile

if len(sys.argv) != 2:
    print "Usage: hgd <filename>"

def get_file_from_hg(filepath):
    #print("Getting %s from hg" % filepath)
    p = subprocess.Popen(("hg", "cat", filepath), stdout=subprocess.PIPE)
    out, err = p.communicate()
    return out

def get_file_from_git(filepath):
    #print("Getting %s from git" % filepath)
    p = subprocess.Popen(("git", "ls-files", "--full-name", filepath), stdout=subprocess.PIPE)
    out, err = p.communicate()
    filepath = out.strip()
    p = subprocess.Popen(("git", "show", "HEAD:" + filepath), stdout=subprocess.PIPE)
    out, err = p.communicate()
    return out

def get_file_from_svn(filepath):
    #print("Getting %s from svn" % filepath)
    p = subprocess.Popen(("svn", "cat", filepath), stdout=subprocess.PIPE)
    out, err = p.communicate()
    return out

def get_file_from_cvs(filepath):
    #print("Getting %s from cvs" % filepath)
    p = subprocess.Popen(("cvs", "update", "-p", filepath), stdout=subprocess.PIPE)
    out, err = p.communicate()
    return out

def get_file_from_revcontrol(filepath):
    thisdir = os.path.dirname(os.path.realpath(os.path.abspath(filepath)))
    if os.path.exists(os.path.join(thisdir, '.svn')):
        return get_file_from_svn(filepath)
    if os.path.exists(os.path.join(thisdir, 'CVS')):
        return get_file_from_cvs(filepath)

    while True:
        if os.path.exists(os.path.join(thisdir, '.hg')):
            return get_file_from_hg(filepath)
        if os.path.exists(os.path.join(thisdir, '.git')):
            return get_file_from_git(filepath)
        parent = os.path.dirname(thisdir)
        if parent == thisdir:
            sys.exit("Couldn't find any known revision control system for %s" % filepath)
        thisdir = parent

def open_diffs(filepath):
    orig_contents = get_file_from_revcontrol(filepath)

    orig_file = tempfile.NamedTemporaryFile()
    try:
        orig_file.write(orig_contents)
        orig_file.flush()
        os.chmod(orig_file.name, 0400)
        subprocess.call(("vimdiff", orig_file.name, filepath))
    finally:
        orig_file.close()

if __name__ == '__main__':
    if len(sys.argv) <= 1:
        print "Usage: rcd <filepath> [<filepath> ...]"
        sys.exit(1)
    for filepath in sys.argv[1:]:
        open_diffs(filepath)
